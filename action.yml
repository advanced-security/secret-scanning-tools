name: 'secret-scanning-custom-action'
description: 'Testing Suite for GitHub Secret Scanning Custom Patterns'

inputs:
  repository:
    description: Repository owner and repo name
    default: ${{ github.repository }}

  token:
    description: GitHub Personal Access Token
    default: ${{ github.token }}

  mode:
    description: Secret Scanning Test Suite Mode
    default: validate

  templates-path:
    description: Path to template directory

  template-main:
    description: Main README template name
  
  template-patterns:
    description: PATTERNS template name

  argvs:
    description: Additional arguments


runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
      if: runner.environment == 'github-hosted' || (runner.tool_cache != '' && runner.tool_cache != null)

    - name: Install Dependencies
      shell: bash
      run: |
        echo "::group::Installing Dependencies"
        pushd ${{ github.action_path }}
        python3 -m pip install pipenv && python3 -m pipenv install --system
        popd
        echo "::endgroup::"

    - name: Run Secret Scanning tools
      shell: bash
      env:
        INPUTS_MODE: ${{ inputs.mode }}
        INPUTS_TOKEN: ${{ inputs.token }}
        INPUTS_REPOSITORY: ${{ inputs.repository }}
        INPUTS_TEMPLATES_PATH: ${{ inputs.templates-path }}
        INPUTS_TEMPLATE_MAIN: ${{ inputs.template-main }}
        INPUTS_TEMPLATE_PATTERNS: ${{ inputs.template-patterns }}
      run: |
        echo "::group::Running Secret Scanning tools: ${INPUTS_MODE}"

        cd ${{ github.action_path }}
        python3 -m secretscanning \
          "--${INPUTS_MODE}" \
          --github-token "${INPUTS_TOKEN}" \
          --github-repository "${INPUTS_REPOSITORY}" \
          ${INPUTS_TEMPLATES_PATH:+--templates "${INPUTS_TEMPLATES_PATH}"} \
          ${INPUTS_TEMPLATE_MAIN:+--templates-main "${INPUTS_TEMPLATE_MAIN}"} \
          ${INPUTS_TEMPLATE_PATTERNS:+--templates-patterns "${INPUTS_TEMPLATE_PATTERNS}"}
          ${{ inputs.argvs }}
